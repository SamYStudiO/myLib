/* * The contents of this file are subject to the Mozilla Public License Version * 1.1 (the "License"); you may not use this file except in compliance with * the License. You may obtain a copy of the License at  * *        http://www.mozilla.org/MPL/  * * Software distributed under the License is distributed on an "AS IS" basis, * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License * for the specific language governing rights and limitations under the License.  * * The Original Code is myLib Framework. * * The Initial Developer of the Original Code is * Samuel EMINET (aka SamYStudiO) contact@samystudio.net. * Portions created by the Initial Developer are Copyright (C) 2008-2011 * the Initial Developer. All Rights Reserved. * */package myLib.controls {	import myLib.assets.IAsset;	import myLib.controls.IComboBox;		/**	 * @author SamYStudiO ( contact@samystudio.net )	 */	public interface IComboBoxStepper extends IComboBox 	{		/**		 * Get or set a Boolean that indicates button action are invert. Only action are invert not buttons.		 * 		 * @default false		 */		function get invertNextPrevious() : Boolean;		function set invertNextPrevious( b : Boolean ) : void;				/**		 * Get or set a Boolean that indicates if next and previous button are fixed size (false) or are resized to match component size (true).		 * 		 * @default true		 */		function get resizeButton() : Boolean;		function set resizeButton( b : Boolean ) : void;				/**		 * Indicates next and previous button position with TextInput using StepperNextPreviousPosition constants.		 * 		 * @default StepperNextPreviousPosition.RIGHT		 * @see myLb.controls.StepperNextPreviousPosition		 */		function get nextPreviousPosition() : String;		function set nextPreviousPosition( s : String ) : void;				/**		 * Indicates space between buttons and TextInput.		 * 		 * @default 0		 */		function get textButtonSpacing() : Number;		function set textButtonSpacing( n : Number ) : void;				/**		 * Get IAsset used to render next button asset.		 */		function get nextAsset() : IAsset;				/**		 * Get IAsset used to render previous button asset.		 */		function get previousAsset() : IAsset;	}}