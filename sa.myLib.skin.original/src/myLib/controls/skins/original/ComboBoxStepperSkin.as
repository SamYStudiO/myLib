/* * The contents of this file are subject to the Mozilla Public License Version * 1.1 (the "License"); you may not use this file except in compliance with * the License. You may obtain a copy of the License at  * *        http://www.mozilla.org/MPL/  * * Software distributed under the License is distributed on an "AS IS" basis, * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the License * for the specific language governing rights and limitations under the License.  * * The Original Code is myLib Framework. * * The Initial Developer of the Original Code is * Samuel EMINET (aka SamYStudiO) contact@samystudio.net. * Portions created by the Initial Developer are Copyright (C) 2008-2011 * the Initial Developer. All Rights Reserved. * */package myLib.controls.skins.original {	import myLib.assets.IAsset;	import myLib.controls.Button;	import myLib.controls.skins.IButtonSkin;	import myLib.controls.skins.IComboBoxStepperSkin;	import myLib.controls.skins.IListSkin;	import myLib.controls.skins.ITextInputSkin;	/**	 * @author SamYStudiO ( contact@samystudio.net )	 */	public class ComboBoxStepperSkin extends ComboBoxSkin implements IComboBoxStepperSkin	{		/**		 * Get or set the IButtonSkin for next asset.		 */		public var nextButtonSkin : IButtonSkin;		/**		 * Get or set the IButtonSkin for previous asset.		 */		public var previousButtonSkin : IButtonSkin;				/**		 * Get or set the initial style for next asset.		 */		public var nextButtonInitStyle : Object;				/**		 * Get or set the initial style for previous asset.		 */		public var previousButtonInitStyle : Object;				/**		 * Build a new ComboBoxStepperSkin instance.		 * @param boxSkin The IButtonSkin for box asset.		 * @param arrowButtonSkin The IButtonSkin for arrow button asset.		 * @param textInputSkin The ITextInputSkin for TextInput asset.		 * @param listSkin The IListSkin for List asset.		 * @param nextButtonSkin The IButtonSkin for next button asset.		 * @param previousButtonSkin The IButtonSkin for previous button asset.		 * @param focusRect The focus rectangle asset string definition, BitmapData object or external URL.		 * @param boxInitStyle The initial style for box asset.		 * @param arrowButtonInitStyle The initial style for arrow button asset.		 * @param textInputInitStyle The initial style for TextInput asset.		 * @param listInitStyle The initial style for List asset.		 * @param nextButtonInitStyle istInitStyle The initial style for next button asset.		 * @param previousButtonInitStyle istInitStyle The initial style for previous button asset.		 */		public function ComboBoxStepperSkin ( boxSkin : IButtonSkin = null , arrowButtonSkin : IButtonSkin = null , textInputSkin : ITextInputSkin = null , listSkin : IListSkin = null , nextButtonSkin : IButtonSkin = null , previousButtonSkin : IButtonSkin = null ,												focusRect : * = null , errorRect : * = null , boxInitStyle : Object = null , arrowButtonInitStyle : Object = null , textInputInitStyle : Object = null , listInitStyle : Object = null , nextButtonInitStyle : Object = null , previousButtonInitStyle : Object = null )		{			super( boxSkin , arrowButtonSkin , textInputSkin , listSkin , focusRect , errorRect , boxInitStyle , arrowButtonInitStyle , textInputInitStyle , listInitStyle );					this.nextButtonSkin = nextButtonSkin || new ButtonSkin( null , StepperNextUp , StepperNextOver , StepperNextDown , StepperNextDisabled , null , null , null , null , null , StepperNextIconUp , StepperNextIconOver , StepperNextIconDown , StepperNextIconDisabled, null , null , null , null );			this.previousButtonSkin = previousButtonSkin || new ButtonSkin( null , StepperPreviousUp , StepperPreviousOver , StepperPreviousDown , StepperPreviousDisabled , null , null , null , null , null , StepperPreviousIconUp , StepperPreviousIconOver , StepperPreviousIconDown , StepperPreviousIconDisabled , null , null , null );						if( nextButtonInitStyle != null )			{				nextButtonInitStyle.autoRepeat = true;				nextButtonInitStyle.autoRepeatDelay = 250;				nextButtonInitStyle.autoRepeatInterval = 50;			}						if( previousButtonInitStyle != null )			{				previousButtonInitStyle.autoRepeat = true;				previousButtonInitStyle.autoRepeatDelay = 250;				previousButtonInitStyle.autoRepeatInterval = 50;			}						this.nextButtonInitStyle = nextButtonInitStyle || { autoRepeat : true , autoRepeatDelay : 250 , autoRepeatInterval : 50 };			this.previousButtonInitStyle = previousButtonInitStyle || { autoRepeat : true , autoRepeatDelay : 250 , autoRepeatInterval : 50 };		}				/**		 * @inheritDoc		 */		public function getNextAsset(  ) : IAsset		{			return new Button( null , nextButtonInitStyle , nextButtonSkin );		}				/**		 * @inheritDoc		 */		public function getPreviousAsset(  ) : IAsset		{			return new Button( null , previousButtonInitStyle , previousButtonSkin );		}	}}